Index: app/src/main/java/com/example/singlestep/ui/detail/FlightViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.singlestep.ui.detail\r\n\r\nimport android.app.Application\r\nimport androidx.lifecycle.AndroidViewModel\r\nimport androidx.lifecycle.LiveData\r\nimport androidx.lifecycle.MutableLiveData\r\nimport androidx.lifecycle.viewModelScope\r\nimport android.util.Log\r\nimport com.amadeus.android.domain.resources.Activity\r\nimport com.example.singlestep.data.Amadeus\r\nimport com.example.singlestep.model.Location\r\nimport com.example.singlestep.model.TripParameters\r\nimport com.example.singlestep.model.FlightInfo\r\nimport com.example.singlestep.utils.Result\r\nimport kotlinx.coroutines.CoroutineExceptionHandler\r\nimport kotlinx.coroutines.launch\r\n\r\nclass FlightViewModel(application: Application) : AndroidViewModel(application) {\r\n    private var coroutineExceptionHandler: CoroutineExceptionHandler\r\n    private val _flightList: MutableLiveData<Result<List<FlightInfo>>> = MutableLiveData()\r\n    val flightList: LiveData<Result<List<FlightInfo>>>\r\n        get() = _flightList\r\n    private val amadeus = Amadeus(application.applicationContext)\r\n\r\n    init {\r\n        coroutineExceptionHandler = CoroutineExceptionHandler { _, exception ->\r\n            _flightList.value = Result.Failure(exception)\r\n        }\r\n        getFlightAttractionList()\r\n    }\r\n\r\n    private fun getFlightAttractionList() {\r\n        var mockData = TripParameters(Location(\"YYZ\", null), Location(\"JFK\", null), \"2024-06-17 - 2024-07-01\", 10000.0, 3)\r\n        viewModelScope.launch(coroutineExceptionHandler) {\r\n            _flightList.value = Result.Loading\r\n\r\n            var flightResult = amadeus.getFlights(\r\n                mockData.source.city,\r\n                mockData.destination.city,\r\n                mockData.dates.split(\" - \")[0],\r\n                mockData.dates.split(\" - \")[1],\r\n                mockData.guests\r\n            )\r\n            _flightList.value = Result.Success(flightResult)\r\n\r\n            /*flightResult.firstOrNull()?.let { firstFlight ->\r\n                Log.i(\"Flight Data: \", firstFlight.prices.toString())\r\n            }*/\r\n        }\r\n    }\r\n\r\n    private fun filterFlightList(results: List<Activity>): List<Activity> {\r\n        return results.sortedByDescending {\r\n            it.description?.length\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/singlestep/ui/detail/FlightViewModel.kt b/app/src/main/java/com/example/singlestep/ui/detail/FlightViewModel.kt
--- a/app/src/main/java/com/example/singlestep/ui/detail/FlightViewModel.kt	(revision b9d26154a25c36e6a384af9c4fe059409b5fb9da)
+++ b/app/src/main/java/com/example/singlestep/ui/detail/FlightViewModel.kt	(date 1708642059042)
@@ -30,7 +30,7 @@
     }
 
     private fun getFlightAttractionList() {
-        var mockData = TripParameters(Location("YYZ", null), Location("JFK", null), "2024-06-17 - 2024-07-01", 10000.0, 3)
+        var mockData = TripParameters(Location("YYZ", null, 0.0,0.0), Location("JFK", null,0.0,0.0), "2024-06-17 - 2024-07-01", 10000.0, 3)
         viewModelScope.launch(coroutineExceptionHandler) {
             _flightList.value = Result.Loading
 
